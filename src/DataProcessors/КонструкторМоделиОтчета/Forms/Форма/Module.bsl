&НаКлиенте
Процедура КомандаПолучитьТекстМоделиОтчета(Команда)
	КомандаПолучитьТекстМоделиОтчетаНаСервере();
КонецПроцедуры

&НаСервере
Процедура КомандаПолучитьТекстМоделиОтчетаНаСервере()
	СхемаКомпоновкиДанных = ОбщегоНазначения.ЗначениеИзСтрокиXML(Объект.ТекстСКД);
	МодельТекста = Общий.МодельТекста();
	МодельТекста
		.Добавить("МодельСхемыКомпоновки = Общий.МодельСхемыКомпоновки();")
	;
	Для Каждого НаборДанных Из СхемаКомпоновкиДанных.НаборыДанных Цикл
		Если ТипЗнч(НаборДанных) = Тип("НаборДанныхЗапросСхемыКомпоновкиДанных") Тогда
			МодельТекста
				.Добавить("ТекстЗапроса = """)
				.ГруппировкаНачать()
					.Присоединить(СтрЗаменить(НаборДанных.Запрос, Символы.ПС, Символы.ПС + "|"))
				.ГруппировкаЗавершить()
				.Добавить(""";")
				.Добавить("МодельСхемыКомпоновки.НаборДанныхЗапрос(ТекстЗапроса)")
			;
		КонецЕсли;
		Измерения = РаботаСМассивом.АТДМассив(НаборДанных.Поля)
			.Отобрать("Элемент.Роль.Измерение")
			.Отобразить("Новый Структура('Поле, Значение', Элемент.Поле, Элемент)")
			.ВМассив()
		;
		Ресурсы = РаботаСМассивом.АТДМассив(СхемаКомпоновкиДанных.ПоляИтога)
			.Отобразить("Новый Структура('Поле, Значение', Элемент.ПутьКДанным, Элемент)")
			.ВМассив()
		;
		Периоды = РаботаСМассивом.АТДМассив(НаборДанных.Поля)
			.Отобрать("Элемент.Роль.НомерПериода > 0")
			.Отобразить("Новый Структура('Поле, НомерПериода, Значение', Элемент.ПутьКДанным, Элемент.Роль.НомерПериода, Элемент)")
			.СортироватьПо("НомерПериода")
			.ВМассив()
		;
		Реквизиты = РаботаСМассивом.АТДМассив(НаборДанных.Поля)
			.Отобрать("Параметры.НайтиЭлемент(СтрШаблон('Элемент.Поле = ''%1''', Элемент.Поле)) = Неопределено", , РаботаСМассивом.АТДМассив(Измерения))
			.Отобрать("Параметры.НайтиЭлемент(СтрШаблон('Элемент.Поле = ''%1''', Элемент.Поле)) = Неопределено", , РаботаСМассивом.АТДМассив(Ресурсы))
			.Отобрать("Параметры.НайтиЭлемент(СтрШаблон('Элемент.Поле = ''%1''', Элемент.Поле)) = Неопределено", , РаботаСМассивом.АТДМассив(Периоды))
			.ВМассив()
		;
		 
		Если ЗначениеЗаполнено(Измерения) Тогда
			МодельТекста
				.ГруппировкаНачать()
				.Добавить(".Измерения()")
				.ГруппировкаНачать()
			;
			Для Каждого Поле Из Измерения Цикл
				МодельТекста
					.Добавить(".Поле(""{1}"")", Поле.Поле)
				;
			КонецЦикла;
			МодельТекста
				.ГруппировкаЗавершить()
				.ГруппировкаЗавершить()
			;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Реквизиты) ИЛИ ЗначениеЗаполнено(Периоды) Тогда
			МодельТекста
				.ГруппировкаНачать()
				.Добавить(".Реквизиты()")
				.ГруппировкаНачать()
			;
			Для Каждого Поле Из Периоды Цикл
				МодельТекста
					.Добавить(".Период(""{1}"")", Поле.Поле)
				;
			КонецЦикла;
			Для Каждого Поле Из Реквизиты Цикл
				МодельТекста
					.Добавить(".Поле(""{1}"")", Поле.Поле)
				;
			КонецЦикла;
			МодельТекста
				.ГруппировкаЗавершить()
				.ГруппировкаЗавершить()
			;
		КонецЕсли;

		Если ЗначениеЗаполнено(Ресурсы) Тогда
			МодельТекста
				.ГруппировкаНачать()
					.Добавить(".Ресурсы()")
					.ГруппировкаНачать()
			;
			Для Каждого Поле Из Ресурсы Цикл
				ПолеНабораДанных = НаборДанных.Поля.Найти(Поле.Поле);
				Если ПолеНабораДанных = Неопределено Тогда
					ВычисляемоеПоле = СхемаКомпоновкиДанных.ВычисляемыеПоля.Найти(Поле.Поле);
					Если ВычисляемоеПоле = Неопределено Тогда
						Продолжить;
					КонецЕсли;
					//  Вычисляемое поле
					МодельТекста.Добавить(".ВычисляемоеПоле(""{1}"", , ""{2}"")", Поле.Поле, СтрЗаменить(ВычисляемоеПоле.Выражение, """", """"""));
					Продолжить;
				КонецЕсли;
				Роль = ПолеНабораДанных.Роль;
				Если Роль.Остаток Тогда
					Если Роль.ТипОстатка = ТипОстаткаКомпоновкиДанных.НачальныйОстаток Тогда
						Если ПолеНабораДанных.Поле = Поле.Поле Тогда
							МодельТекста.Добавить(".НачальныйОстаток(""{1}"", , ""{2}"")", ПолеНабораДанных.Поле, Роль.ГруппаОстатка);
						Иначе
							МодельТекста.Добавить(".НачальныйОстаток(""{1}"", ""{2}"", ""{3}"")", ПолеНабораДанных.Поле, Поле.Поле, Роль.ГруппаОстатка);
						КонецЕсли;
					ИначеЕсли Роль.ТипОстатка = ТипОстаткаКомпоновкиДанных.КонечныйОстаток Тогда
						Если ПолеНабораДанных.Поле = Поле.Поле Тогда
							МодельТекста.Добавить(".КонечныйОстаток(""{1}"", , ""{2}"")", ПолеНабораДанных.Поле, Роль.ГруппаОстатка);
						Иначе
							МодельТекста.Добавить(".КонечныйОстаток(""{1}"", ""{2}"", ""{3}"")", ПолеНабораДанных.Поле, Поле.Поле, Роль.ГруппаОстатка);
						КонецЕсли;
					Иначе
											
					КонецЕсли;
					Продолжить;
				КонецЕсли;
				Если ПолеНабораДанных.Поле = Поле.Поле Тогда
					МодельТекста.Добавить(".Сумма(""{1}"")", ПолеНабораДанных.Поле);
				Иначе
					МодельТекста.Добавить(".Сумма(""{1}"", ""{2}"")", ПолеНабораДанных.Поле, Поле.Поле);
				КонецЕсли;
			КонецЦикла;	
			МодельТекста
					.ГруппировкаЗавершить()
				.ГруппировкаЗавершить()
			;
		КонецЕсли;
		Если ЗначениеЗаполнено(СхемаКомпоновкиДанных.Параметры) Тогда
			МодельТекста
				.ГруппировкаНачать()
					.Добавить(".Параметры()")
					.ГруппировкаНачать()
			;
			Для Каждого Параметр Из СхемаКомпоновкиДанных.Параметры Цикл
				МодельТекста.Добавить(".Параметр(""{1}"")", Параметр.Имя);
				Если ЗначениеЗаполнено(Параметр.Выражение) Тогда
					МодельТекста.Присоединить(".Выражение(""{1}"")", Параметр.Выражение);
				КонецЕсли;
			КонецЦикла;
			МодельТекста
					.ГруппировкаЗавершить()
				.ГруппировкаЗавершить()
			;
		КонецЕсли;
		МодельТекста
			.Добавить(";")
		;
	КонецЦикла;
	//////////////////////////////////////////////////
	//  Настройки
	Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	МодельТекста
		.Добавить("МодельНастройкиКомпоновки = Общий.МодельНастройкиКомпоновкиДанных(МодельСхемыКомпоновки.СхемаКомпоновкиДанных)")
		.ГруппировкаНачать()	
	;
	ВывестиВыбранныеПоля(МодельТекста, Настройки.Выбор.Элементы);
	Если ЗначениеЗаполнено(Настройки.Отбор.Элементы) Тогда
		МодельТекста
			.Добавить(".Условия()")
			.ГруппировкаНачать()	
		;
		ВывестиУсловияОтбора(МодельТекста, Настройки.Отбор.Элементы);
		МодельТекста
			.ГруппировкаЗавершить()
		;
	КонецЕсли;
	//  Структура
	Если ЗначениеЗаполнено(Настройки.Структура) Тогда
		МодельТекста
			.Добавить(".Структура()")
			.ГруппировкаНачать()	
		;
		ВывестиГруппировку(МодельТекста, Настройки.Структура);
		
		Для Каждого ЭлементПорядка Из Настройки.Порядок.Элементы Цикл
			Если ТипЗнч(ЭлементПорядка) = Тип("АвтоЭлементПорядкаКомпоновкиДанных") Тогда
				//Автопорядок
				Продолжить;
			КонецЕсли;
			Если ЭлементПорядка.ТипУпорядочивания = НаправлениеСортировкиКомпоновкиДанных.Возр Тогда
				МодельТекста.Добавить("Порядок(""{1}"")", ЭлементПорядка.Поле);
			Иначе
				МодельТекста.Добавить("Порядок(""{1}"", ""-"")", ЭлементПорядка.Поле);
			КонецЕсли;
		КонецЦикла;
		
		МодельТекста
			.ГруппировкаЗавершить()
		;
	КонецЕсли;
	МодельТекста
		.ГруппировкаЗавершить()
		.Добавить(";")
	;
	////////////////////////////////////////////////
	//  Вывод в табличный документ
	МодельТекста
		.Добавить("МодельМакетаКомпоновки = Общий.МодельМакетаКомпоновкиДанных()")
		.Добавить(";//  Формирование макета и вывод отчета")
		.Добавить("МодельМакетаКомпоновки")
		.ГруппировкаНачать()
			.Добавить(".Схема(МодельСхемыКомпоновки.СхемаКомпоновкиДанных)")
			.Добавить(".Настройки(МодельНастройкиКомпоновки.Настройки)")
			.Добавить(".Скомпоновать()")
			.Добавить(".УстановитьИдентификаторТаблицы()")
			.Добавить(".ВывестиВТабличныйДокумент(ДокументРезультат)")
		.ГруппировкаЗавершить()
		.Добавить(";")
	;
	Объект.ТекстМодели = СтрСоединить(МодельТекста.Строки, Символы.ПС);
КонецПроцедуры

Процедура ВывестиГруппировку(МодельТекста, Группировка)
	Для Каждого ЭлементГруппировки Из Группировка Цикл
		Для Каждого ПолеГруппировки Из ЭлементГруппировки.ПоляГруппировки.Элементы Цикл
			Если ТипЗнч(ПолеГруппировки) = Тип("АвтоПолеГруппировкиКомпоновкиДанных") Тогда
				МодельТекста.Добавить(".ПолеГруппировки(""*"")");
			Иначе
				МодельТекста.Добавить(".ПолеГруппировки(""{1}"")", ПолеГруппировки.Поле);
			КонецЕсли;
		КонецЦикла;
		Для Каждого ПолеВыбора Из ЭлементГруппировки.Выбор.Элементы Цикл
			Если ТипЗнч(ПолеВыбора) = Тип("АвтоВыбранноеПолеКомпоновкиДанных") Тогда
				Продолжить;
			Иначе
				МодельТекста.Добавить(".Поле(""{1}"")", ПолеВыбора.Поле);
			КонецЕсли;
		КонецЦикла;
		Если ЗначениеЗаполнено(ЭлементГруппировки.Структура) Тогда
			МодельТекста
				.Добавить(".ГруппировкаНачать()")
					.ГруппировкаНачать()	
			;
			ВывестиГруппировку(МодельТекста, ЭлементГруппировки.Структура);
			МодельТекста
					.ГруппировкаЗавершить()	
				.Добавить(".ГруппировкаЗавершить()")
			;
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры

Процедура ВывестиВыбранныеПоля(МодельТекста, Элементы)
	Для Каждого ВыбранноеПоле Из Элементы Цикл
		Если ТипЗнч(ВыбранноеПоле) = Тип("ГруппаВыбранныхПолейКомпоновкиДанных") Тогда
			МодельТекста
				.Добавить(".ГруппаНачать()")
					.ГруппировкаНачать()
			;
			ВывестиВыбранныеПоля(МодельТекста, ВыбранноеПоле.Элементы);
			МодельТекста
					.ГруппировкаЗавершить()
				.Добавить(".ГруппаЗавершить()")
			;
			Продолжить;
		КонецЕсли;
		МодельТекста
			.Добавить(".Поле(""{1}"")", ВыбранноеПоле.Поле)
		;
	КонецЦикла;
КонецПроцедуры

Процедура ВывестиУсловияОтбора(МодельТекста, Элементы)
	Для Каждого ЭлементОтбора Из Элементы Цикл
		Если ТипЗнч(ЭлементОтбора) = Тип("ГруппаЭлементовОтбораКомпоновкиДанных") Тогда
			Если ЭлементОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ Тогда
				МодельТекста
					.Добавить(".ОтборГруппаИНачать()")
				;
			ИначеЕсли ЭлементОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли Тогда
				МодельТекста
					.Добавить(".ОтборГруппаИЛИНачать()")
				;
			Иначе
				МодельТекста
					.Добавить(".ОтборГруппаНЕНачать()")
				;
			КонецЕсли;
			МодельТекста
					.ГруппировкаНачать()
			;
			ВывестиУсловияОтбора(МодельТекста, ЭлементОтбора.Элементы);
			МодельТекста
					.ГруппировкаЗавершить()
				.Добавить(".ОтборГруппаЗавершить()")
			;
			Продолжить;
		КонецЕсли;
		Если ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно Тогда
			МодельТекста
				.Добавить(".Отбор(""{1}"", ""{2}"")", ЭлементОтбора.ЛевоеЗначение, ЭлементОтбора.ПравоеЗначение)
			;
		Иначе
			МодельТекста
				.Добавить(".Отбор(""{1}"", ""{2}"", ВидСравненияКомпоновкиДанных.{3})", ЭлементОтбора.ЛевоеЗначение, ЭлементОтбора.ПравоеЗначение, ОбщийКлиентСервер.CamelCase(ЭлементОтбора.ВидСравнения))
			;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры
